#!/bin/bash
# 
# Copyright 2014, 2015, 2016 Internet Corporation for Assigned Names and Numbers.
# 
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, you can obtain one at https://mozilla.org/MPL/2.0/.

#
# Developed by Sinodun IT (www.sinodun.com)
#

# 
# File:   datafiles_rm_empty_xml_dirs.bash
#

# We need user with access to the data directory
a=$(@LIBEXEC@/check_user_perms -fnc)
if [ $? -ne 0 ] ; then
	echo $a
	exit 1
fi
eval $a


DATE=$(date --date="- 7 day" +%Y-%m-%d)
INCOMING="incoming"

usage () {
	echo
	echo "Remove empty incoming xml directories older than a certain date (default is all the processed directories older than 7 days ago)"
	echo 
	echo "Usage: $(basename $0) options"
	echo
	echo "Supported options:"
	echo "	-d Date before which to remove empty xml directories (default: 7 days ago, format YYYY-MM-DD)"
	echo "	-h Show this help."
}

while getopts ":d:h" opt; do
    case $opt in
        d  ) DATE=$OPTARG ;;
        h  ) usage
             exit 1 ;;
        \? ) usage
             exit 1 ;;
    esac
done

echo "$(date): $0 COMMENCED"

[ -z "$DATE" ] && usage && exit 1

# Validate the start date
if [[ ! $DATE =~ ^[0-9]{4}-[0-1][0-9]-[0-3][0-9]$ ]] ; then
		echo "Error: The start date is not in the required format of YYYY-MM-DD" 
		exit 1
fi
date "+%Y-%m-%d" --date="$DATE" >/dev/null 2>&1
is_valid=$?
if [ ${is_valid} -ne 0 ] ; then
	echo "Error: The start date is invalid" 
	exit 1
fi

# Date converted in seconds to be compared with processed directories date
DATE_SECONDS=$(date --utc --date "$DATE" +%s)

cd $DATADIR

for SERVER in * ; do
	test -L $SERVER && continue;
	test -d $SERVER || continue;
	cd $DATADIR/$SERVER
	for NODE in * ; do
		test -L $NODE && continue;
		test -d $NODE || continue;
		test -L $NODE/$DONE && continue;
        test -d $NODE/$DONE || continue;
        cd $DATADIR/$SERVER/$NODE/$INCOMING
		for MYDATE in * ; do
			test -L $MYDATE && continue;
			test -d $MYDATE || continue;
			date "+%Y-%m-%d" -d $MYDATE >/dev/null 2>&1
			is_valid=$?
			if [ ${is_valid} -ne 0 ] ; then
				continue;
			fi
			# Check if directory is older than DATE
			MYDATE_SECONDS=$(date --utc --date "$MYDATE" +%s)
			[ $MYDATE_SECONDS -ge $DATE_SECONDS ] && continue;
			# Remove empty directories
			my_count=$(ls -1 $MYDATE | wc -l)
			[ $my_count -eq 0 ] && rm -rf $MYDATE
		done
		cd $DATADIR/$SERVER
	done
	cd $DATADIR
done

echo "$(date): $0 COMPLETED"
