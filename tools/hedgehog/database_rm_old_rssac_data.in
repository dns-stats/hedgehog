#!/bin/bash
# 
# Copyright 2014, 2015, 2016 Internet Corporation for Assigned Names and Numbers.
# 
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, you can obtain one at https://mozilla.org/MPL/2.0/.

#
# Developed by Sinodun IT (www.sinodun.com)
#

# 
# File:   database_rm_old_rssac_data
#

#TODO: Add option to select all servers or just one server

# We need a write user
a=$(@LIBEXEC@/check_user_perms -wc)
if [ $? -ne 0 ] ; then
	echo "$a"
	exit 1
fi
eval "$a"
export PGPASSWORD=$PGPASSWORD

DEFAULT_DAY=$(date --date="$(date +%Y-%m-15)" +%Y%m%d)
NOW=$(date --date="now" +%Y%m%d)

if [ $DEFAULT_DAY -ge $NOW ] ; then
	START=$(date --date="$NOW - 2 month" +%Y-%m)
else
	START=$(date --date="$NOW - 1 month" +%Y-%m)
fi


usage () {
    echo
    echo "Delete all the raw RSSAC unique_source data in the database for a given month. All data older"
    echo "than this is also deleted."
    echo "This script is intended to be run monthly to free disk space on systems where the raw"
    echo "RSSAC unique sources data becomes unmanagably large."
    echo
    echo "Usage: $(basename $0) options"
    echo
    echo "Supported options:"
    echo "  -m Month from which to delete all raw unique source data (default ${START}: format YYYY-MM)"
    echo "       (default is 2 months ago when in the first half of the current month and"
    echo "        1 month ago when in the second half of the current month)"
    echo "  -h Show this help"
}

while getopts ":m:h" opt; do
    case $opt in
        m  ) START=$OPTARG ;;
        h  ) usage
             exit 1 ;;
        \? ) usage
             exit 1 ;;
    esac
done

echo "$(date): $0 COMMENCED"

# Validate the input date. Add day since (oddly) date won't parse just year and month
if [ ! -z "$START" ] ; then
	if [[ ! $START =~ ^[0-9]{4}-[0-1][0-9]$ ]] ; then
			echo "Error: The start date is not in the required format of YYYY-MM" 
			exit 1
	fi
	date "+%Y-%m-%d" --date="${START}-01" >/dev/null 2>&1
	is_valid=$?
	if [ ${is_valid} -ne 0 ] ; then
		echo "Error: The start date is not valid" 
		exit 1
	fi
	
	START_FIRST=$(date --date=$START-01 +%Y%m%d)
	NOW_FIRST=$(date --date="$NOW" +%Y%m01)
	if [ $NOW_FIRST -le $START_FIRST ] ; then
		echo "Error: The given month cannot be this month or in the future." 
		exit 1
	fi
fi

echo "Deleting unique_source data during and before ${START}" 

UNIQUE_SOURCE_RAW_PLOT_NAME="unique_sources_raw"

TABLE_NAMES=$(psql $CONN_STRING -tc "select tablename from pg_tables where schemaname='dsc' order by tablename" | grep $UNIQUE_SOURCE_RAW_PLOT_NAME)

START_TRUNC=$(date --date="$START-01" +%Y%m%d)
for TABLENAME in $TABLE_NAMES
do
	(( SIZE=${#TABLENAME}-7 ))
	TMP_DATE=$(echo ${TABLENAME:$SIZE} | sed -e 's/_/-/')
	TABLE_DATE=$(date --date="$TMP_DATE-01" +%Y%m%d)
	if [ $START_TRUNC -ge $TABLE_DATE ] ; then
		echo "Truncating table $TABLENAME"
		psql $CONN_STRING -c "truncate $TABLENAME;"
	fi
done

echo "$(date): $0 COMPLETED"
exit 0