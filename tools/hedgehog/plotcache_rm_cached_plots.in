#!/bin/bash
# 
# Copyright 2014, 2015, 2016 Internet Corporation for Assigned Names and Numbers.
# 
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, you can obtain one at https://mozilla.org/MPL/2.0/.

#
# Developed by Sinodun IT (www.sinodun.com)
#

# 
# File:   plotcache_rm_cached_plots
#

# We need user with access to the plotcache directory
a=$(@LIBEXEC@/check_user_perms -pc)
if [ $? -ne 0 ] ; then
	echo $a
	exit 1
fi
eval $a
export PGPASSWORD=$PGPASSWORD

REMOVE_ALL=0

usage () {
    echo
    echo "This script is interactive if the -a option is not selected."
    echo "You will be asked to select which cached plot types you'd like to remove"
    echo
    echo "Usage: $(basename $0) options"
    echo
    echo "Supported options:"
    echo "  -a Remove all cached plots"
    echo "  -h Show this help."
}

while getopts ":ah" opt; do
    case $opt in
        a  ) REMOVE_ALL=1 ;;
        h  ) usage
             exit 1 ;;
        \? ) usage
             exit 1 ;;
    esac
done

echo "$(date): $0 COMMENCED"

if [ $REMOVE_ALL -eq 1 ] ; then
	echo "Removing all cached plots from $PLOT_CACHE_DIR"
	rm -rf $PLOT_CACHE_DIR/*/*/*.png
	rm -rf $PLOT_CACHE_DIR/*/*/*.html
	echo "Done."
	exit
fi

# Get list of servers and plots from database
SERVERS=$(psql $CONN_STRING -tc "SELECT display_name FROM dsc.server;")
PLOTS=$(psql $CONN_STRING -tc "SELECT name FROM dsc.visible_plot;")
PLOTS=(${PLOTS// / }) # convert string to an array

while true ; do
    if [ ${#PLOTS[@]} -eq 0 ] ; then
        exit
    fi
    echo "Please select which cached plot type you'd like to clear or q to exit:"
    echo
    n=0
    for plot in ${PLOTS[@]} ; do
        let n=n+1
        echo "    ${n}. ${plot}"
    done
    echo
    echo -n "Enter selection or q to exit: "
    read c
    if [ "$c" == "Q" ] || [ "$c" == "q" ] ; then
        exit 1
    elif [[ $c -ge 1 ]] && [[ $c -le $n ]] ; then
        let c=c-1
        selection=${PLOTS[${c}]}
        PLOTS=(${PLOTS[@]:0:$c} ${PLOTS[@]:$(($c + 1))}) # remove selected plot from PLOTS
        for server in $SERVERS ; do
            echo "rm -rf $PLOT_CACHE_DIR/${server}/${selection}/*.png"
            rm -rf $PLOT_CACHE_DIR/${server}/${selection}/*.png
            echo "rm -rf $PLOT_CACHE_DIR/${server}/${selection}/*.html"
            rm -rf $PLOT_CACHE_DIR/${server}/${selection}/*.html
            echo "Removed plots for ${selection}."
        done
    else
        echo "invalid selection - please try again or exit by typing 'q'"
    fi
	echo "Do you want to remove another plot?"
done

echo "$(date): $0 COMPLETED"
