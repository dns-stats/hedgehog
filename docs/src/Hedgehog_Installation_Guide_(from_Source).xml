
<h1><ac:structured-macro ac:macro-id="f4c32cbd-4ffc-4c67-adeb-b02f68dfc0d9" ac:name="toc" ac:schema-version="1" /></h1>
<p>The following instructions describe how to install Hedgehog 2.1.0rc1 from source code on Ubuntu 14.04 Server and set up imports of data.</p><ac:structured-macro ac:macro-id="af83fcff-3c94-43c7-92a3-68280b1e34ca" ac:name="warning" ac:schema-version="1"><ac:rich-text-body>
<p>Installation from packages is supported from 2.1 onwards. Support for installation directly from source is likely to be discontinued in a future version. It is recommended that users migrate to installing from packages from 2.1 where possible (see the Upgrade Guide).</p></ac:rich-text-body></ac:structured-macro>
<p>&nbsp;</p>
<p>&nbsp;</p><ac:structured-macro ac:macro-id="b97e1073-8939-41e4-9abc-f56b74e227db" ac:name="numberedheadings" ac:schema-version="1"><ac:rich-text-body>
<h1>Requirements</h1>
<h2>Platform support</h2>
<p>Version 2.1.0rc1 of Hedgehog is currently only supported on Ubuntu 14.04.3 LTS Server.</p>
<h2>Database support</h2>
<p>Hedgehog has been tested with PostgreSQL 9.3.X. The installation of this of this is not covered in detail since it may or may not be co-located with the other hedgehog components. If required, it can be installed using</p><ac:structured-macro ac:macro-id="6897d863-a9cc-41ea-8027-eac711c7c51f" ac:name="code" ac:schema-version="1"><ac:plain-text-body><![CDATA[sudo apt-get install postgresql]]></ac:plain-text-body></ac:structured-macro><ac:structured-macro ac:macro-id="ea934b7e-8a46-4b02-8158-d1ff0a72b176" ac:name="warning" ac:schema-version="1"><ac:rich-text-body>
<p>The Hedgehog servers and PostgreSQL must both be configured to use UTC!</p></ac:rich-text-body></ac:structured-macro>
<h2>General</h2>
<h3>Home directory permissions</h3>
<p>Some users set the permissions on their home directory such that other users cannot read or execute that directory. In this case when running scripts that update the database as the <em>hedgehog</em> or <em>postgres</em> (user via 'sudo -u &lt;user&gt;') meaningless messages are generated from psql about being unable to cd into logged in users home directory. To avoid this spurious output change directory to one that allows other users to read/execute (e.g. /tmp) and run the scripts from there.</p>
<h2>Hedgehog components</h2>
<p><span>Hedgehog comprises 3 components which can be run on the same or different machines (m</span><span style="line-height: 1.42857;">ultiple Web GUI's can be connected to the same database):</span></p>
<ul>
<li>A PostgreSQL database</li>
<li>Data Manager
<ul>
<li>Scripts for database creation and management</li>
<li>XML/DAT processing</li></ul></li>
<li>Web GUI</li></ul>
<h1>Hedgehog dependencies</h1><ac:structured-macro ac:macro-id="d7a35b5f-3763-4147-9082-cdb476bed298" ac:name="info" ac:schema-version="1"><ac:rich-text-body>
<p>It is necessary to only select the dependencies required for the specific components being installed.</p></ac:rich-text-body></ac:structured-macro>
<h2>Packages</h2><ac:structured-macro ac:macro-id="ccc56ca3-e72d-4d6e-a288-a2c8faec35b1" ac:name="code" ac:schema-version="1"><ac:plain-text-body><![CDATA[# common dependencies
sudo add-apt-repository ppa:ondrej/pkg-nlnetlabs
sudo apt-get update
sudo apt-get install autoconf libtool make postgresql-client libyaml-tiny-perl \
					 postgresql-9.3-ip4r postgresql-plpython-9.3 libgetdns1 \
					 python-getdns help2man
# data manager dependencies
sudo apt-get install g++ libboost-program-options-dev \
                     libboost-system-dev libboost-filesystem-dev libpqxx-dev \
                     python-ipy python-dev python-yaml python-dnspython \
                     python-psycopg2
# web front-end dependencies
sudo add-apt-repository ppa:opencpu/rapache
sudo apt-get update
sudo apt-get install libapache2-mod-r-base r-cran-ggplot2 r-cran-dbi \
                     r-cran-cairodevice r-cran-reshape r-cran-digest \
                     r-base r-base-core libcairo2-dev libxt-dev \
                     libjs-jquery libjs-jquery-ui unifont r-cran-rjson \
                     r-cran-rpostgresql]]></ac:plain-text-body></ac:structured-macro>
<h2>Install R packages (Web GUI component only)</h2>
<p>These instructions&nbsp;are for R packages that must be installed using R's built-in compilation tools (there is no Ubuntu package for them). To install interactively:</p><ac:structured-macro ac:macro-id="26b3d619-800d-416f-a43c-ab53c2c1de8d" ac:name="code" ac:schema-version="1"><ac:plain-text-body><![CDATA[sudo R
install.packages(c("brew","Cairo","googleVis","R.utils","yaml","plyr"))
# you will be prompted to choose a mirror site for the repo before proceeding...
install.packages("<prefix>/share/hedgehog/R_packages/RPostgreSQLHelper", repos=NULL)
q()
# If you are prompted to save workspace image y/n/c, choose no. ]]></ac:plain-text-body></ac:structured-macro>
<p><span>For scripting purposes a repo can be specified by using a command of the form:</span></p><ac:structured-macro ac:macro-id="e30d898c-efdd-4bd6-98b6-55337ba184d3" ac:name="code" ac:schema-version="1"><ac:plain-text-body><![CDATA[install.packages("name", repos='http://cran.rstudio.com/')]]></ac:plain-text-body></ac:structured-macro>
<p><span>Hedgehog is tested against version 3.1.1 of R.&nbsp;</span>The package versions that Hedgehog has been tested against are listed below alongside each package.</p>
<table>
<thead>
<tr>
<th>
<div class="tablesorter-header-inner">R Package</div></th>
<th>
<div class="tablesorter-header-inner">Supported Version</div></th></tr></thead>
<tbody>
<tr>
<td>brew</td>
<td>1.0-6</td></tr>
<tr>
<td>Cairo</td>
<td>1.5-9</td></tr>
<tr>
<td>googleVis</td>
<td>0.5.10</td></tr>
<tr>
<td colspan="1">R.utils</td>
<td colspan="1">2.2.0</td></tr>
<tr>
<td colspan="1">yaml</td>
<td colspan="1">2.1.13</td></tr>
<tr>
<td colspan="1">plyr</td>
<td colspan="1">
<p class="p1">1.8.3</p></td></tr></tbody></table>
<p><span><br /></span></p>
<h1>Build Hedgehog components</h1>
<h2>Hedgehog source code</h2>
<p>Download the 2.1.0rc1 release from github: <a href="https://github.com/dns-stats/hedgehog/archive/2.0.0rc2.tar.gz">https://github.com/dns-stats/hedgehog/archive/2.1.0rc1.tar.gz</a></p>
<p>(If you downloaded the above URL with wget the tarball will be called 2.1.0rc1.tar.gz)</p>
<h2>Build components</h2><ac:structured-macro ac:macro-id="164c212b-0b60-4e06-ab21-1ce13eb3b8ac" ac:name="info" ac:schema-version="1"><ac:rich-text-body>
<ul>
<li>By default, all components are built.&nbsp;</li>
<li>Use the --disable-web and/or --disable-data-manager configure options to select which components are actually built.</li>
<li>All installs get the hedgehog.yaml configuration file.</li></ul></ac:rich-text-body></ac:structured-macro>
<p><strong style="line-height: 1.4285715;">Building Hedgehog</strong></p><ac:structured-macro ac:macro-id="419ee581-9eb3-4cdc-beff-1428c8c824fa" ac:name="code" ac:schema-version="1"><ac:plain-text-body><![CDATA[tar -xzf hedgehog-2.1.0rc1.tar.gz
cd hedgehog-2.1.0rc1
./autogen.sh
mkdir build
cd build
../configure [--prefix=] [--disable-web] [--disable-data-manager]
make
sudo make install]]></ac:plain-text-body></ac:structured-macro>
<p>&nbsp;</p>
<h1>Create system users and groups</h1>
<p>Two system users are required for Hedgehog, depending on what components are installed:</p>
<table>
<tbody>
<tr>
<th>User</th>
<th>Default</th>
<th colspan="1">Component</th>
<th>Note</th></tr>
<tr>
<td>Database owner</td>
<td>hedgehog</td>
<td colspan="1">
<p>Data Manager</p></td>
<td>
<p><span>This is the user that will own the database created by</span></p>
<p><span>&nbsp;</span>hedgehog and the top level datafile directories.</p></td></tr>
<tr>
<td>Database read user</td>
<td>www-data</td>
<td colspan="1">
<p>Web front-end</p></td>
<td>
<p>This defaults to the same as the default apache user</p></td></tr></tbody></table><ac:structured-macro ac:macro-id="a6402469-07a6-49b9-acb9-9d8255efe638" ac:name="code" ac:schema-version="1"><ac:plain-text-body><![CDATA[# create a system user and group called hedgehog
sudo addgroup --system hedgehog
sudo adduser --system --ingroup hedgehog hedgehog]]></ac:plain-text-body></ac:structured-macro>
<h1>Configure Hedgehog</h1>
<ul>
<li>For all installs, edit the <em>&lt;prefix&gt;/etc/hedgehog/hedgehog.yaml</em> configuration file to make sure the user names match the users specified in the previous steps.</li>
<li>Also configure the database parameters (port, name etc...) as required.</li>
<li>If using passwords stored in this file, be aware that this file is readable by all users.</li></ul><ac:structured-macro ac:macro-id="45afef3f-7615-4eaf-bf0c-16c282e817af" ac:name="code" ac:schema-version="1"><ac:plain-text-body><![CDATA[database: 
  host         : /var/run/postgresql # specify a host for the postgresql DB. If
                                     # this begins with a slash, it specifies the
                                     # directory in which the socket file is 
                                     # stored.
  port         : 5432      # specify port for the postgresql DB.
  name         : hedgehog  # specify dbname for the postgresql DB.
  owner        : hedgehog  # specify a user to own the postgresql DB. 
                           # [Required for Data Manager component]
  owner_pass   :           # specify a password for the owner user if needed.
  read_user    : www-data  # specify a read user for the postgresql DB. 
                           # [Required for Web front-end component]
  read_pass    :           # specify a password for the read user if needed.
]]></ac:plain-text-body></ac:structured-macro><ac:structured-macro ac:macro-id="82107baf-7916-4b88-ba10-82ccf375ec6c" ac:name="warning" ac:schema-version="1"><ac:rich-text-body>
<p><span>Do not edit the 'directories' section of this file as it is auto-generated.</span></p></ac:rich-text-body></ac:structured-macro><ac:structured-macro ac:macro-id="f8be51c3-dbdd-47ef-84f0-78395e1cda8c" ac:name="warning" ac:schema-version="1"><ac:rich-text-body>
<p><span>Depending on you PostgreSQL configuration you may need to add passwords to this file. If you do then be aware that, by default, this file is readable by all users. You should restrict access to just the hedgehog user on a Data Manager only machine or the hedgehog and www-data user on a combined Data Manager and Web GUI.</span></p></ac:rich-text-body></ac:structured-macro>
<p>&nbsp;</p>
<h1>Data Manager</h1>
<h2>Create a database</h2>
<p>Ask your DBA to create the necessary database. This is a script to help them. It create the DATABASE, USERS and ROLES needed to run hedgehog (using default values), and can optionally accept a user specified database name and read/write user names.</p><ac:structured-macro ac:macro-id="ab8fdebc-57c9-428a-93f1-a14b16c43ade" ac:name="code" ac:schema-version="1"><ac:plain-text-body><![CDATA[<prefix>/bin/hedgehog_database_create]]></ac:plain-text-body></ac:structured-macro><ac:structured-macro ac:macro-id="02277652-1ddd-497a-a306-c99a4505d62d" ac:name="code" ac:schema-version="1"><ac:plain-text-body><![CDATA[sudo vi /etc/postgresql/9.3/main/postgresql.conf
#uncomment and set extra_float_digits = 1]]></ac:plain-text-body></ac:structured-macro>
<p>&nbsp;</p>
<h2>Specify the nodes/servers</h2><ac:structured-macro ac:macro-id="c077248c-59e9-43de-87cb-ca46b97f3ea7" ac:name="note" ac:schema-version="1"><ac:rich-text-body>
<p><span>For this version of Hedgehog the servers and nodes to be processed and displayed must be specified manually.</span></p></ac:rich-text-body></ac:structured-macro>
<ul>
<li>Edit the the&nbsp;<em>&lt;prefix&gt;/etc/hedgehog/nodes.csv</em>&nbsp;file to specify the servers, nodes and grouping to be used (example format is provided with entries commented out).</li>
<li>Note that the current GUI layout is optimised for nodes with short names (&lt;6 characters) of the same length</li></ul>
<h2><span>Directory permissions</span></h2>
<p><span>Change the ownership of the directory specified below so it is owned by the same user as the database:</span></p><ac:structured-macro ac:macro-id="b470cd8d-9e13-4d24-a210-c866c33991eb" ac:name="code" ac:schema-version="1"><ac:plain-text-body><![CDATA[sudo chown -R <DB_OWNER>:<DB_OWNER> <prefix>/var/hedgehog/data]]></ac:plain-text-body></ac:structured-macro><ac:structured-macro ac:macro-id="35a0efc9-1483-4978-9cfc-54408d73c508" ac:name="info" ac:schema-version="1"><ac:rich-text-body>
<p>You may also need to alter the permissions on this directory to allow uploads via your chosen mechanism.</p></ac:rich-text-body></ac:structured-macro>
<p>&nbsp;</p>
<h2>Create the database tables</h2>
<p>Run the command below noting the following:</p>
<ul>
<li>If you have historic data to import then use the -m flag to specify the month of the oldest data that will need importing. Otherwise the database tables will be created to hold data from this month onwards.</li>
<li>Note that this script will also create the directory structure for all the specified servers and nodes under the <em>data</em> directory if it does not exist</li></ul><ac:structured-macro ac:macro-id="bc6b383b-9264-4efc-9d2f-7d96ca8baac1" ac:name="code" ac:schema-version="1"><ac:plain-text-body><![CDATA[sudo -u <DB_OWNER> <prefix>/bin/hedgehogctl database_init]]></ac:plain-text-body></ac:structured-macro>
<p>Then run the following script to make sure the list of delegated TLDs in the datbase is up to date.</p><ac:structured-macro ac:macro-id="8275d862-2b6f-4617-91dd-481e49c9f52d" ac:name="code" ac:schema-version="1"><ac:plain-text-body><![CDATA[sudo -u hedgehog /opt/hedgehog/bin/hedgehogctl database_update_tlds_from_zone 2>/dev/null]]></ac:plain-text-body></ac:structured-macro>
<p>&nbsp;</p>
<h1>Web configuration</h1>
<p>Check the parameters in the <em>&lt;prefix&gt;/etc/hedgehog/hedgehog_gui.yaml</em> file, which specifies parameters controlling the behaviour of the web front end. See the &quot;Plot Caching&quot; section in the user guide for a more detailed description of when plots are cached.</p><ac:structured-macro ac:macro-id="2a7b41aa-0468-4d87-aa80-c42a3d66626e" ac:name="code" ac:schema-version="1"><ac:plain-text-body><![CDATA[---
# YAML config for hedgehog GUI.
# NOTE: If this file is changed then apache must be restarted for the changes to take effect
www:
  default_plot_type             : interactive # 'static'      -> png plots
                                              # 'interactive' -> googlevis plots
  default_interactive_plot_type : svg         # 'flash' -> plot requires flash
                                              # 'svg'   -> plot is SVG/VML and 
                                              # does not require flash (but with svg
                                              # plots some legends do not wrap properly)
  default_node_grouping         : instance    # choose from 'none', 'instance', 'city' or
                                              # 'country'
  use_plot_caching              : 1           # '1' -> true, use cached plots when possible
                                              # '0' -> false, never use cached plots
  caching_delay_in_hours        : 1           # If 'use_plot_caching=1' then only plots with
                                              # an end time earlier than this number of
                                              # hours ago are cached. More recent plots are
                                              # not cached as data may still be importing
  presentation_delay_in_hours   : 0           # Number of hours behind now for which the
                                              # GUI will display data
  support_url                   :             # configurable target for "Support" external
                                              # link on Homepage. The default dns-stats.org
                                              # issue tracker used if left blank]]></ac:plain-text-body></ac:structured-macro>
<h2>Directory permissions</h2>
<p>Change the ownership of the directory specified below so it is owned by the read user of the database:</p><ac:structured-macro ac:macro-id="21c9372c-2a18-49f7-bf25-283da0376cb7" ac:name="code" ac:schema-version="1"><ac:plain-text-body><![CDATA[sudo chown -R <DB_READ_USER>:<DB_READ_USER> <prefix>/var/hedgehog/www]]></ac:plain-text-body></ac:structured-macro>
<p>&nbsp;</p>
<h2>Configure apache</h2><ac:structured-macro ac:macro-id="b0a945a7-d4ca-4279-b438-d204e9e239e6" ac:name="note" ac:schema-version="1"><ac:rich-text-body>
<p>You will probably need to edit the <em>/etc/apache2/apache2.conf</em> file to enable access to the Hedgehog directories by adding <em>&lt;Directory&gt; </em>elements for <em> </em></p>
<ul>
<li><em>&lt;prefix&gt;/share/hedgehog&gt;</em> and<em> </em></li>
<li><em>&lt;prefix&gt;/var/hedgehog/www&gt;&nbsp;</em></li></ul></ac:rich-text-body></ac:structured-macro>
<p>&nbsp;</p>
<p>Depending on your exact installation choices and apache configuration y<span style="line-height: 1.4285715;">ou may want to disable the default site using the following command:</span></p><ac:structured-macro ac:macro-id="21875051-2529-483d-8d53-8282831497c8" ac:name="code" ac:schema-version="1"><ac:plain-text-body><![CDATA[sudo a2dissite 000-default.conf]]></ac:plain-text-body></ac:structured-macro>
<p>&nbsp;</p>
<ul>
<li>Add the Hedgehog configuration files to apache and enable the site (this file name can be changed if required to match any local apache policy):</li></ul><ac:structured-macro ac:macro-id="baebccc1-d08a-4d5b-a2fc-c74af8d2f30d" ac:name="code" ac:schema-version="1"><ac:plain-text-body><![CDATA[sudo cp <prefix>/share/hedgehog/conf/hedgehog.conf /etc/apache2/sites-available/
sudo a2ensite hedgehog.conf]]></ac:plain-text-body></ac:structured-macro><ac:structured-macro ac:macro-id="9780659c-70ce-4563-907e-c852704b64af" ac:name="note" ac:schema-version="1"><ac:rich-text-body>
<p><span>apache/rapache write some of their logs to user.* so it can be useful to change the syslog config: </span></p><ac:structured-macro ac:macro-id="b6719101-d4eb-4e4e-9e99-e6a90ea90b9c" ac:name="code" ac:schema-version="1"><ac:plain-text-body><![CDATA[sudo vi /etc/rsyslog.d/50-default.conf]]></ac:plain-text-body></ac:structured-macro>
<p>Uncomment the line&nbsp;beginning&nbsp;'user.*'.&nbsp;</p></ac:rich-text-body></ac:structured-macro>
<p>&nbsp;</p>
<ul>
<li>Finally, reload apache:</li></ul><ac:structured-macro ac:macro-id="437802f1-ce5b-4731-b57c-afddab3668a9" ac:name="code" ac:schema-version="1"><ac:plain-text-body><![CDATA[sudo service apache2 reload]]></ac:plain-text-body></ac:structured-macro>
<p>&nbsp;</p>
<p>At this point you should test that you can see the servers and nodes in the web front end at the URL http://&lt;server-name&gt;/hedgehog</p>
<h1>Importing data</h1>
<p>Hedgehog can process data in the following 3 ways:</p>
<table>
<tbody>
<tr>
<th>Source format</th>
<th>Output format</th>
<th>&nbsp;</th></tr>
<tr>
<td>XML</td>
<td>Database</td>
<td>For real time uploads</td></tr>
<tr>
<td colspan="1">DAT</td>
<td colspan="1">Database</td>
<td colspan="1">For import of historic data</td></tr>
<tr>
<td colspan="1">XML</td>
<td colspan="1">DAT</td>
<td colspan="1">For backwards compatibility with DSC</td></tr></tbody></table>
<p>&nbsp;</p>
<p>In each case the <em>&lt;prefix&gt;/bin/refile_and_grok</em> script is used, it is simply given different parameters:</p><ac:structured-macro ac:macro-id="8744f405-c0f1-4ae7-9c70-c620f3fe6520" ac:name="code" ac:schema-version="1"><ac:plain-text-body><![CDATA[> refile_and_grok -h

refile_and_grok - finds all input files in the working directory and processes to output format

-w Working directory to search for input files (default: <prefix>/var/hedgehog/data)
-i Input file format <XML|DAT> (default: XML)
-o Output file format <DAT|DB> (default: DB)
-c Non-interactive mode - use this flag when being run by a cron job
-s Start date from which to process incoming data (XML input only)
-r Disable processing of rssac datasets. Default is to process all datasets.
-R Reserved processors. Number of CPUS processors to exclude from import (default 0).
-a Append output to the refile_and_grok.stdout file (default is overwrite)
-h Show this help.]]></ac:plain-text-body></ac:structured-macro>
<p>&nbsp;</p>
<h2>Importing historical .DAT data</h2><ac:structured-macro ac:macro-id="49aa1644-0f21-458a-997a-a97281524845" ac:name="code" ac:schema-version="1"><ac:plain-text-body><![CDATA[sudo -u <DB_OWNER> <prefix>/bin/refile_and_grok -i DAT]]></ac:plain-text-body></ac:structured-macro>
<p>Be aware that this can take a long time if there is a significant amount of historic data and it may be advisable to run this in stages.</p>
<h2>Importing real-time .XML data</h2>
<h3>Manually</h3>
<ul>
<li>This can be done manually by running the <em>refile_and_grok</em> script (consider running this nohup as it may take a while depending on how much data there is to process).</li></ul><ac:structured-macro ac:macro-id="d7395071-712b-4086-a05b-b05a9e44eee5" ac:name="code" ac:schema-version="1"><ac:plain-text-body><![CDATA[sudo -u <DB_OWNER> <prefix>/bin/refile_and_grok]]></ac:plain-text-body></ac:structured-macro>
<ul>
<li>A snapshot of the progress of the data import can be generated by running the command below:</li></ul><ac:structured-macro ac:macro-id="82ceea47-fb2b-4a9d-9778-41afa639bf07" ac:name="code" ac:schema-version="1"><ac:plain-text-body><![CDATA[sudo -u <DB_OWNER> <prefix>/bin/hedgehogctl datafiles_create_summary]]></ac:plain-text-body></ac:structured-macro>
<p>&nbsp;</p>
<h3>Automatically</h3>
<ul>
<li>Configure a regular cron job for <em>refile_and_grok</em> as shown below</li></ul>
<h2>Importing zone-size and load-time data for RSSAC</h2>
<p>To do this run&nbsp;the <em>rssacd</em>&nbsp;demon specifying the server of interest. This listens for NOTIFY messages and after receiving one:</p>
<ul>
<li>obtains the zone size from the notifying server by performing an XFR and&nbsp;</li>
<li>probes each node listed for the configured server <span>with an IP address </span>to calculate the zone load time&nbsp;</li></ul><ac:structured-macro ac:macro-id="19d57b7b-186a-4768-9091-4cde7d97041e" ac:name="note" ac:schema-version="1"><ac:rich-text-body>
<p><span>This requires that management IP addresses are configured for the nodes via the nodes.csv file (also note that </span><em>rssacd</em><span> needs restarting if new nodes are added).</span></p></ac:rich-text-body></ac:structured-macro>
<p><em>rssacd</em>&nbsp;can be run from the command line for testing, or using an init script.</p>
<p>From the command line:</p><ac:structured-macro ac:macro-id="9e455870-90f8-46a8-b10b-90e9e08f8ffe" ac:name="code" ac:schema-version="1"><ac:plain-text-body><![CDATA[<prefix>/sbin/rssacd --log ~/var/log/hedgehog/rssacd.log -s <server-name> -z <fully_qualified_zone_name>]]></ac:plain-text-body></ac:structured-macro>
<p>From an init script:</p>
<ul>
<li>Configure the server name, TSIG key, etc. in the /etc/hedgehog/rssac.conf file</li>
<li>Then run:</li></ul><ac:structured-macro ac:macro-id="9a00298c-6f4e-4ee5-bef0-7815d73a4946" ac:name="code" ac:schema-version="1"><ac:plain-text-body><![CDATA[update-rc.d rssacd defaults]]></ac:plain-text-body></ac:structured-macro>
<p>&nbsp;</p>
<h1>Cron jobs</h1>
<p>Several cron jobs need to be configured.</p>
<h2>Data Manager</h2>
<p>Below is an example crontab for a typical data manager install (<em>sudo -u &lt;DB_OWNER&gt; crontab -e</em>).</p><ac:structured-macro ac:macro-id="fc2eabbe-b7b2-4e5b-be21-cb0914f397ab" ac:name="warning" ac:schema-version="1"><ac:rich-text-body>
<p><strong><span>Note that the </span><em>database_manage_partitions </em><span>script </span><strong>MUST </strong> be run at least once a month to create the tables for next month or the import will fail.</strong></p></ac:rich-text-body></ac:structured-macro>
<p>Note that two new optional cron jobs are suggested in 2.1</p><ac:structured-macro ac:macro-id="fbd47908-ad58-497c-8b68-39b3dbb973ee" ac:name="code" ac:schema-version="1"><ac:plain-text-body><![CDATA[# REQUIRED: 
# Import XML data every 15 mins
00,15,30,45 * * * * <prefix>/bin/refile_and_grok -c >> /var/log/hedgehog/refile_and_grok_xml_to_db.og 2>&1
# Twice monthly job to make sure the DB tables for next month are created 
# ahead of time
0 6 15,28 * * <prefix>/bin/hedgehogctl database_manage_partitions >> /var/log/hedgehog/database_manage_partitions.log 2>&1

# OPTIONAL:
# Daily job to process RSSAC data. By default data is processed 
# for a single day 1 week ago
0 1 * * * <prefix>/bin/hedgehogctl database_process_rssac_data -D >> /var/log/database_process_rssac_data.log 2>&1
# Weekly job to update the delegated TLDs from the IANA database. 
0 2 * * 0 <prefix>/bin/hedgehogctl database_update_tlds_from_zone >> /var/log/database_update_tlds_from_zone.log 2>&1
# Monthly job to update the geoIP database. 
0 3 1 * * <prefix>/bin/hedgehogctl database_update_geoip >> /var/log/database_update_geoip.log 2>&1
# Monthly job to remove empty xml directories that are older than 7 days old
0 3 2 * * <prefix>/bin/hedgehogctl datafiles_rm_empty_xml_dirs -D >> /var/log/datafiles_rm_empty_xml_dirs.log 2>&1
# Monthly job to tar up processed xml directories
0 3 7 * * <prefix>/bin/hedgehogctl datafiles_tar_old_xml -D >> /var/log/datafiles_tar_old_xml.log 2>&1]]></ac:plain-text-body></ac:structured-macro>
<h2>Web component</h2>
<p>Below is an example crontab for a typical web front-end install (<em>sudo -u &lt;DB_READ_USER&gt; crontab -e</em>)</p><ac:structured-macro ac:macro-id="1debd589-2a37-40d3-983e-f3bf245dfbe5" ac:name="code" ac:schema-version="1"><ac:plain-text-body><![CDATA[# OPTIONAL: 
# Daily job to create cached plots for the previous day to make loading common plots  
# quicker. Run a few hours after midnight so all data is uploaded.
0 4 * * * <prefix>/bin/hedgehogctl plotcache_generate_cached_plots -D >> /var/log/hedgehog/plotcache_generate_cached_plots.log -D 2>&1
# Daily job to generate RSSAC reports. By default report is generated 
# for a single day 1 week ago
0 3 * * * <prefix>/bin/hedgehogctl rssac_generate_reports >> /var/log/rssac_generate_reports.log 2>&1]]></ac:plain-text-body></ac:structured-macro></ac:rich-text-body></ac:structured-macro>